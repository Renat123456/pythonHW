# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.
# 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
# 6 12

n = int(input("Введите количество элементов множества n: "))
set_n = set()
count = 0
while count < n:
    set_n.add(int(input("Введите элемент множества n: ")))
    count += 1
m = int(input("Введите количество элементов множества m: "))
set_m = set()
count = 0
while count < m:
    set_m.add(int(input("Введите элемент множества m: ")))
    count += 1
set_result = set_n & set_m

print(*sorted(set_result))

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai
#  ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.
# 4 -> 1 2 3 4
# 9

data = [int(i) for i in input ("Введите числа: ").split()]
data.append(data[0])
data.append(data[1])
max_3 = 0
count = 0
for i in range(len(data) - 2):
    count = data[i] + data[i + 1] + data[i + 2]
    if count > max_3:
        max_3 = count
print(max_3)
